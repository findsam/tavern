import { fetchUserDetails } from "../static/api";
import { useEffect, useState } from "react";
import Image from "next/image";
import Navbar from "../components/navbar";
import { useRouter } from "next/router";
import { AiOutlineSearch } from "react-icons/ai";
import { BsBell } from "react-icons/bs";

export default function Home() {
  const [user, setUser] = useState(null);

  useEffect(() => {
    if (!user) (async () => await fetchUserDetails(setUser))();
  }, [user]);

  const router = useRouter();

  // useEffect(() => {
  //   const timeout = setTimeout(() => {
  //     router.push("/");
  //   }, 7000);
  //   return () => clearTimeout(timeout);
  // }, [router.query]);

  return (
    <>
      <Navbar user={user} setUser={setUser} />

      <div className="p-8 ml-[245px] w-[calc(100%-245px)] relative z-100">
        <div className="flex">
          <form className="w-full flex items-center justify-center px-2.5 py-2.5 rounded-md bg-neutral-800 flex">
            <button>
              <AiOutlineSearch className="text-xl mr-3 opacity-70" />
            </button>
            <input
              className="focus:outline-none w-full col-span-2 bg-transparent text-white/70 placeholder:text-white/70 placeholder:text-sm placeholder:tracking-wide"
              placeholder="Search by title, urls, or creators."
            ></input>
          </form>
          <div className="px-8 ml-auto items-end">
            {user && (
              <aside className="flex gap-3 items-center ml-auto">
                <BsBell className="text-2xl shrink-0 mr-8" />
                <span>
                  <h5 className="tracking-wide text-sm mb-0.5 text-right">
                    {user.me.username}#{user.me.discriminator}
                  </h5>
                  <p className="tracking-wide text-xs opacity-70">
                    {user.me.email}
                  </p>
                </span>
                <Image
                  className="rounded-full grayscale border border-stone-500/20"
                  height="40"
                  width="40"
                  src={`https://cdn.discordapp.com/avatars/${user.me.id}/${user.me.avatar}.png`}
                  alt="discord user profile picture generated by api"
                />
              </aside>
            )}
          </div>
        </div>
      </div>
    </>
  );
}

// <div className="w-full max-w-5xl mx-auto mt-20">
//   <br /> <br />
//   {user && (
//     <div>
//       <button onClick={() => handleLogout(setUser)}>
//         LOGOUT OF ACCOUNT
//       </button>
//       <br /> <br />
//       <Image
//         className="rounded-full"
//         height="75"
//         width="75"
//         src={`https://cdn.discordapp.com/avatars/${user.me.id}/${user.me.avatar}.png`}
//         alt="discord user profile picture generated by api"
//       />
//       <br />
//       <h1>
//         {user.me.username}#{user.me.discriminator}
//       </h1>
//       {/* <br /> <br />
//     your account connections:
//     <ul>
//       {user.connections.map((connection, index) => (
//         <li key={index}>
//           {connection.type}: {connection.name}
//         </li>
//       ))}
//     </ul>
//     <br /> <br />
//     your current discord servers:
//     <ul>
//       {user.guilds.map((guild, index) => (
//         <li key={index}>{guild.name}</li>
//       ))}
//     </ul> */}

//     </div>
//   )}
// </div>
